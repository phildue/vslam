variables:
  DOCKER_TLS_CERTDIR: "/certs"

before_script:
  - docker info
  - ls /mnt/dataset
#  - docker pull phildue/vslam:dev
#  - docker tag phildue/vslam:dev vslam:dev

build:
  stage: build
  script:
      - ls /mnt/dataset
 #   - docker build -t vslam:dev --target developer .
 #   - docker build -t vslam:builder --target builder .
 #   - docker build -t vslam:runtime --target runtime .
test:
  stage: test
  script:
    - docker run vslam:builder /bin/bash -c "colcon test --event-handler console_direct+ ; colcon test-result"

evaluate:
  stage: test
  script: 
    - docker run -v/mnt/dataset:/mnt/dataset vslam:runtime /bin/bash -c "source local_setup.bash && python3 /script/evaluate.py ci-evaluation rgbd_dataset_freiburg1_desk --run_algo --commit_hash $CI_COMMIT_SHA --out_root /home/ros/"

lint:
  stage: test
  script:
    - docker run vslam:builder ament_clang_format --xunit-file build/vslam_ros/test_results/vslam_ros/clang_format.xunit.xml"
    - docker run vslam:builder ament_clang_tidy --xunit-file build/vslam_ros/test_results/vslam_ros/clang_tidy.xunit.xml"
    - docker run vslam:builder ament_flake8 --xunit-file build/vslam_ros/test_results/vslam_ros/flake8.xunit.xml"

deploy-container:
  stage: deploy
  script:
    - docker tag vslam:dev phildue/vslam:dev
    - docker push phildue/vslam:dev
    - docker tag vslam:dev phildue/vslam:runtime
    - docker push phildue/vslam:runtime
